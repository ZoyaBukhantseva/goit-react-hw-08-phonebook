{"version":3,"file":"static/js/664.b4e49369.chunk.js","mappings":"wLAWA,IAPc,WAEV,IAAMA,GAAMC,EAAAA,EAAAA,IAAYC,EAAAA,IACrB,OAAQF,GAAOG,IAAAA,OAAAA,QAAwBH,EAC7C,C,gKCyDD,UAtDiB,WAEb,IAAMI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAYjB,OACI,iCACA,SAAC,IAAD,KACA,SAAC,IAAD,KACA,SAAC,KAAD,CAAMC,gBAAmBC,EAAKC,SAAW,QACzCC,EAAI,OAASC,EAAK,OAASC,QAAU,EAAIC,KAAQ,EAAIC,SAAW,YAAcC,WAAa,YAC3F,iBAAMC,SAhBW,SAAAC,GAEjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAQF,EAAKG,SAASD,MAAME,MAC5BC,EAAWL,EAAKG,SAASE,SAASD,MAC3BpB,GAASsB,EAAAA,EAAAA,IAAe,CAACJ,MAAAA,EAAOG,SAAAA,KACxCE,MAAK,SAAAC,GAAwB,kCAAbA,EAAIC,MAA2CvB,EAAS,YAAa,CAAEwB,SAAS,GAAS,GACjH,EAQG,UACA,UAAC,KAAD,CACEC,gBAAkB,YAClBC,OAAS,UACTC,EAAI,KAAOC,EAAK,OAAQC,GAAO,GAAKxB,EAAI,IAAMC,EAAI,IAAMwB,QAAU,OAASC,cAAgB,SAC3FC,WAAe,SAAWC,eAAmB,SAAYC,aAAiB,GAAK9B,SAAW,WAJ5F,WAKM,UAAC,KAAD,YACE,UAAC,IAAD,CAAW+B,MAAQ,WAAaC,SAAW,GAAKC,WAAa,IAA7D,oBACI,SAAC,EAAAC,EAAD,CAAOC,QAAU,UAAYb,OAAS,QAAUG,GAAO,EACrDN,KAAK,QACLiB,KAAK,QACLC,MAAM,yIACNC,UAAQ,QAId,UAAC,IAAD,CAAWP,MAAQ,WAAaC,SAAW,GAAKP,GAAO,EAAIQ,WAAa,IAAxE,sBACI,SAAC,EAAAC,EAAD,CAAOC,QAAU,UAAYb,OAAS,QAAUG,GAAO,EACrDN,KAAK,WACLiB,KAAK,WACLC,MAAM,+FACNC,UAAQ,WAId,SAAC,IAAD,CAASH,QAAU,UAAYJ,MAAQ,aAAe9B,EAAK,IAAOsC,QAAY,EAAId,GAAO,EAAIe,GAAM,EAAGrB,KAAK,SAA3G,oBACA,SAAC,KAAD,CAASsB,GAAG,YAAYC,MAAO,CAAEX,MAAO,UAAWC,SAAU,IAA7D,gCAKf,C","sources":["components/ContactsList/Error.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { selectAuthErr } from \"redux/user/userSelectors\";\nimport Notiflix from \"notiflix\";\n\nconst Error = () => {\n    \n    const err = useSelector(selectAuthErr);\n       return (err && Notiflix.Notify.failure(err))\n};\n\n\nexport default Error;\n","import { useDispatch } from 'react-redux';\nimport { fetchLoginUser } from 'redux/user/userOperations';\nimport { NavLink } from 'react-router-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport Loading from \"..//..//components/Loading/Loading\";\nimport Error from '..//..//components/ContactsList/Error';\n\nimport bg from '..//..//source/best-wallpaper_skobka_84.jpg';\n\nimport { Box, FormControl, FormLabel, Input, Button } from \"@chakra-ui/react\";\n\nconst LoginPage =()=> {\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const hendleSubmit = e => {\n\n        e.preventDefault();\n        const form = e.currentTarget;\n        const email = form.elements.email.value;\n        const password = form.elements.password.value;\n        const redy = dispatch(fetchLoginUser({email, password}));\n        redy.then(res => {if(res.type === \"user/fetchLoginUser/fulfilled\"){ navigate(\"/contacts\", { replace: true })}})\n    };\n\n    return (\n        <>\n        <Error/>\n        <Loading/>\n        <Box  backgroundImage ={ bg } position={ \"fixed\" } \n        w={ '100%' } h ={ '100%' } opacity={ 1 } top = {-2 } bgRepeat={ 'no-repeat' } bgPosition={ 'center' }></Box>\n        <form onSubmit={ hendleSubmit }>\n        <Box \n          backgroundColor={ '#5a5a5fb2' }\n          shadow={ 'dark-lg' }\n          p={ '10' } m = {'auto'} mt = { 10 } w={ 330 } h={ 240 } display={ 'flex' } flexDirection={ 'column' }\n          alignItems = { 'center' } justifyContent = { 'center' }  borderRadius = { 15 } position={ \"relative\" }>\n              <FormControl>\n                <FormLabel color={ 'InfoText' } fontSize={ 15 } fontWeight={ 700 }>E-mail\n                    <Input bgColor={ '#BEE3F8' } shadow={ 'inner' } mt = { 2 }\n                      type=\"email\"\n                      name=\"email\"\n                      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                      required>\n                    </Input>\n                </FormLabel>\n              \n                <FormLabel color={ 'InfoText' } fontSize={ 15 } mt = { 5 } fontWeight={ 700 }>Password\n                    <Input bgColor={ '#BEE3F8' } shadow={ 'inner' } mt = { 2 }\n                      type=\"password\"\n                      name=\"password\"\n                      title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                      required\n                    />\n                </FormLabel>\n              </FormControl>\n                <Button  bgColor={ '#BEE3F8' } color={ 'ButtonText' } w ={ 100 }  padding = { 2 } mt = { 5 } mb = {2} type=\"submit\">Login</Button>\n                <NavLink to=\"/register\" style={{ color: '#BEE3F8', fontSize: 20 }}>or Register</NavLink>\n            </Box>\n          </form>\n          </>\n    );\n};\n\nexport default LoginPage;"],"names":["err","useSelector","selectAuthErr","Notiflix","dispatch","useDispatch","navigate","useNavigate","backgroundImage","bg","position","w","h","opacity","top","bgRepeat","bgPosition","onSubmit","e","preventDefault","form","currentTarget","email","elements","value","password","fetchLoginUser","then","res","type","replace","backgroundColor","shadow","p","m","mt","display","flexDirection","alignItems","justifyContent","borderRadius","color","fontSize","fontWeight","I","bgColor","name","title","required","padding","mb","to","style"],"sourceRoot":""}