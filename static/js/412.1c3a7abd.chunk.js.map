{"version":3,"file":"static/js/412.1c3a7abd.chunk.js","mappings":"wLAWA,IAPc,WAEV,IAAMA,GAAMC,EAAAA,EAAAA,IAAYC,EAAAA,IACrB,OAAQF,GAAOG,IAAAA,OAAAA,QAAwBH,EAC7C,C,qJCkED,UAhEgB,WAEZ,IAAMI,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GAEjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAAQL,EAAKG,SAASE,MAAMD,MAC5BE,EAAWN,EAAKG,SAASG,SAASF,MACxCT,GAASY,EAAAA,EAAAA,IAAgB,CAAEL,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,IACvC,EAED,OACE,iCACA,SAAC,IAAD,KACA,SAAC,IAAD,KACA,SAAC,KAAD,CAAME,gBAAmBC,EAAKC,SAAW,QACzCC,EAAI,OAASC,EAAK,OAASC,QAAU,GAAMC,KAAQ,EAAIC,SAAW,YAAcC,WAAa,YAC7F,iBAAMC,SAAWpB,KACjB,iBAAMoB,SAAWpB,EAAjB,UACA,UAAC,KAAD,CACAqB,gBAAkB,SAClBC,OAAS,UACTC,EAAI,KAAOC,EAAK,OAAQC,GAAO,GAAKX,EAAI,IAAMC,EAAI,IAAMW,QAAU,OAASC,cAAgB,SAC3FC,WAAe,SAAWC,eAAmB,SAAYC,aAAiB,GAAKjB,SAAW,WAJ1F,WAKI,UAAC,KAAD,YACO,UAAC,IAAD,CAAWkB,MAAQ,WAAaC,SAAW,GAAKC,WAAa,IAA7D,kBACG,SAAC,EAAAC,EAAD,CAAOC,QAAU,mBAAqBb,OAAS,QAAUG,GAAO,EAE9DW,KAAK,OACL/B,KAAK,OACLgC,MAAM,yIACNC,UAAQ,QAGZ,UAAC,IAAD,CAAWP,MAAQ,WAAaC,SAAW,GAAKC,WAAa,IAA7D,oBACE,SAAC,EAAAC,EAAD,CAAOC,QAAU,mBAAqBb,OAAS,QAAUG,GAAO,EAE9DW,KAAK,QACL/B,KAAK,QACLgC,MAAM,yIACNC,UAAQ,QAGZ,UAAC,IAAD,CAAWP,MAAQ,WAAaC,SAAW,GAAKC,WAAa,IAA7D,sBACE,SAAC,EAAAC,EAAD,CAAOC,QAAU,mBAAqBb,OAAS,QAAUG,GAAO,EAE9DW,KAAK,WACL/B,KAAK,WACLgC,MAAM,+FACNC,UAAQ,WAIX,SAAC,IAAD,CAAQP,MAAQ,aAAejB,EAAK,IAAOyB,QAAY,EAAId,GAAO,EAAIe,GAAM,EAAGJ,KAAK,SAApF,uBACA,SAAC,KAAD,CAASK,GAAG,SAASC,MAAO,CAAEX,MAAO,WAAYC,SAAU,IAA3D,6BAKtB,C","sources":["components/ContactsList/Error.jsx","pages/registerPage/RegisterPage.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { selectAuthErr } from \"redux/user/userSelectors\";\nimport Notiflix from \"notiflix\";\n\nconst Error = () => {\n    \n    const err = useSelector(selectAuthErr);\n       return (err && Notiflix.Notify.failure(err))\n};\n\n\nexport default Error;\n","import { fetchSignUpUser } from 'redux/user/userOperations';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Loading from \"..//..//components/Loading/Loading\";\nimport Error from '..//..//components/ContactsList/Error';\nimport bg from '../..//source/pngtree-memphis-note-ripped-paper-notebook-background-picture-image_1739025.jpg'\n\n//chakra\nimport { Box, FormControl, FormLabel, Input, Button } from \"@chakra-ui/react\"\n\nconst Register =()=> {\n\n    const dispatch = useDispatch();\n\n    const hendleSubmit = e => {\n\n        e.preventDefault();\n        const form = e.currentTarget;\n        const name = form.elements.name.value;\n        const email = form.elements.email.value;\n        const password = form.elements.password.value;\n        dispatch(fetchSignUpUser({ name, email, password }));\n        }\n    \n        return (\n          <>\n          <Error/>\n          <Loading/>\n          <Box  backgroundImage ={ bg } position={ \"fixed\" } \n          w={ '100%' } h ={ '100%' } opacity={ 0.1 } top = {-2 } bgRepeat={ 'no-repeat' } bgPosition={ 'center' }></Box>\n          <form onSubmit={ hendleSubmit }></form>\n          <form onSubmit={ hendleSubmit }>\n          <Box \n          backgroundColor={ 'Window' }\n          shadow={ 'dark-lg' }\n          p={ '10' } m = {'auto'} mt = { 10 } w={ 330 } h={ 300 } display={ 'flex' } flexDirection={ 'column' }\n          alignItems = { 'center' } justifyContent = { 'center' }  borderRadius = { 20 } position={ \"relative\" }>\n              <FormControl>\n                     <FormLabel color={ 'InfoText' } fontSize={ 15 } fontWeight={ 700 } >Name\n                        <Input bgColor={ 'chakra-subtle-bg' } shadow={ 'inner' } mt = { 2 }\n                          \n                          type=\"text\"\n                          name=\"name\"\n                          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                          required>\n                        </Input>\n                        </FormLabel>\n                      <FormLabel color={ 'InfoText' } fontSize={ 15 } fontWeight={ 700 } >E-mail\n                        <Input bgColor={ 'chakra-subtle-bg' } shadow={ 'inner' } mt = { 2 }\n                          \n                          type=\"email\"\n                          name=\"email\"\n                          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                          required>\n                         </Input>\n                        </FormLabel>\n                      <FormLabel color={ 'InfoText' } fontSize={ 15 } fontWeight={ 700 } >Password\n                        <Input bgColor={ 'chakra-subtle-bg' } shadow={ 'inner' } mt = { 2 }\n                         \n                          type=\"password\"\n                          name=\"password\"\n                          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                          required\n                        />\n                       </FormLabel>\n                       </FormControl>\n                       <Button color={ 'ButtonText' } w ={ 100 }  padding = { 2 } mt = { 5 } mb = {2} type=\"submit\">Register</Button>\n                       <NavLink to=\"/login\" style={{ color: 'GrayText', fontSize: 20 }}>Or login</NavLink>\n                </Box>\n                </form>\n                </>\n        );\n};\n\nexport default Register;\n"],"names":["err","useSelector","selectAuthErr","Notiflix","dispatch","useDispatch","hendleSubmit","e","preventDefault","form","currentTarget","name","elements","value","email","password","fetchSignUpUser","backgroundImage","bg","position","w","h","opacity","top","bgRepeat","bgPosition","onSubmit","backgroundColor","shadow","p","m","mt","display","flexDirection","alignItems","justifyContent","borderRadius","color","fontSize","fontWeight","I","bgColor","type","title","required","padding","mb","to","style"],"sourceRoot":""}